A very simple Perl SDL tower defense game.

To run:

> cd camel-defense/eg
> perl 06-world.pl

What works:

   Can place towers and start waves. Towers fire lasers at creeps within range.
   Creeps die, and while living display their health.


Next tasks:

   Towers cost money. Waves are not infinite. Level object.

Requires:

   aliased
   SDL
   Moose
   MooseX::Types
   MooseX::Role::BuildInstanceOf

   
-------------------------------------notes--------------------------------------


Game objects, layers, and z-index in layer:

    world
        grid
1 2         markers
1 1             background
1 4         waypoints
1 5             path
        tower
1 6         sprite
1 3         range
2 1         laser
        wave
2 2         creep
2 3             health bar
        cursor
2 6         sprite 
2 5         shadow
2 4             range

   

Sorted by z-index:

1 1 background
1 2 markers
1 3 tower range
1 4 waypoints
1 5 path
1 6 tower sprite
2 1 laser
2 2 creep
2 3 health bar
2 4 cursor shadow range
2 5 cursor shadow
2 6 cursor sprite 

Layers:
    1 - bg - redrawn every tower build/sell/upgrade
    2 - fg - redrawn every show handler

renderer
    has layer renderers for fg and bg

you can still call render on world, or you can call render on a layer
manager you create on it

how to connect renderer to visual objects:

1- give all visobjs the renderer, they render on it instead of app surface
   - now everybody needs to know about the renderer
   - cant display any visobj without creating and attaching a renderer

2-same as 1, but objs dont render on the renderer. instead they just register
   - not as bad as everybody needs to know renderer, but stil everybody needs to know how to register with it




